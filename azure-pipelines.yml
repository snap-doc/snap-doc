jobs:
  # - job: windows
  #   pool:
  #     vmImage: 'vs2017-win2016'
  #   steps:
  #     - template: .azure/setup-project.yml
  #     - script: yarn test
  #       displayName: Run Tests

  - job: linux_build
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - template: .azure/setup-project.yml
      - script: tar -cf snap-doc.tar ./*
        displayName: 'Preparing Artifact'
      - task: CopyFiles@2
        inputs:
          contents: 'snap-doc.tar'
          targetFolder: $(Build.ArtifactStagingDirectory)
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: $(Build.ArtifactStagingDirectory)
          artifactName: linux-build

  - job: lint
    dependsOn: linux_build
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - template: .azure/linux-build-job.yml
      - script: |
          yarn lerna run lint:ts --parallel
          yarn lerna run lint:js --parallel
          yarn lerna run lint:hbs --parallel
          yarn lerna run lint:md --parallel
        displayName: 'Lint'

  # - job: windows
  #   dependsOn:
  #     - linux_build
  #     - lint
  #   pool:
  #     vmImage: 'vs2017-win2016'
  #   variables:
  #     no.firefox: true
  #   steps:
  #     - template: .azure/setup-project.yml
  #     - script: yarn test

  - job: linux_floating
    dependsOn:
      - linux_build
      - lint
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - template: .azure/setup-project.yml
        parameters:
          installCommand: yarn install --non-interactive --no-lockfile
      - script: |
          yarn test
        displayName: 'Run Tests'

  - job: linux_fixed
    dependsOn:
      - linux_build
      - lint
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - template: .azure/linux-build-job.yml
      - script: |
          yarn lerna run test:coverage --concurrency 1
        displayName: 'Run Tests'
      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
          reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'

  - job: ember_try
    dependsOn:
      - linux_build
      - lint
      - linux_fixed
    pool:
      vmImage: 'ubuntu-16.04'
    strategy:
      matrix:
        lts_3.4:
          scenario: ember-lts-3.4
        beta:
          scenario: ember-beta
        release:
          scenario: ember-release
        canary:
          scenario: ember-canary
    steps:
      - template: .azure/linux-build-job.yml
      - script: EMBER_TRY_SCENARIO=$(scenario) yarn lerna run try:one --concurrency 1

  - job: nightly_release
    - task: Npm@1
      displayName: 'publish @snap-doc/core'
      inputs:
        command: 'publish'
        workingDir: "/packages/core"
        publishRegistry: 'useFeed'
        publishFeed: trunk-core